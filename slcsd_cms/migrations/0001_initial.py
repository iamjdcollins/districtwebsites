# Generated by Django 2.1.2 on 2018-10-24 18:22

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import slcsd_cms.models.domain
import slcsd_cms.models.site
import slcsd_cms.models.user
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0009_alter_user_last_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
                ('published', models.BooleanField(db_index=True, default=True)),
                ('create_date', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('update_date', models.DateTimeField(auto_now=True, db_index=True)),
                ('delete_date', models.DateTimeField(blank=True, db_index=True, null=True)),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, max_length=254, unique=True, validators=[django.core.validators.EmailValidator()], verbose_name='username')),
                ('password', models.CharField(blank=True, max_length=128, null=True, verbose_name='password')),
                ('first_name', models.CharField(max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(max_length=150, verbose_name='last name')),
                ('email', models.EmailField(max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('user_type', models.CharField(choices=[('EMP', 'Employee'), ('NEMP', 'Non-Employee'), ('SVC', 'Service'), ('GST', 'Guest')], default='GST', max_length=5)),
                ('sync_uuid', models.UUIDField(blank=True, editable=False, null=True)),
                ('management', models.BooleanField(db_index=True, default=False)),
                ('date_joined', models.DateTimeField(auto_now_add=True, verbose_name='date joined')),
                ('create_user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='user_create_user', to=settings.AUTH_USER_MODEL)),
                ('delete_user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='user_delete_user', to=settings.AUTH_USER_MODEL)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('update_user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='user_update_user', to=settings.AUTH_USER_MODEL)),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name_plural': 'users',
                'get_latest_by': 'date_joined',
                'ordering': ('first_name', 'last_name'),
                'verbose_name': 'user',
            },
            managers=[
                ('objects', slcsd_cms.models.user.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Domain',
            fields=[
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
                ('published', models.BooleanField(db_index=True, default=True)),
                ('create_date', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('update_date', models.DateTimeField(auto_now=True, db_index=True)),
                ('delete_date', models.DateTimeField(blank=True, db_index=True, null=True)),
                ('domain', models.CharField(db_index=True, max_length=200, verbose_name='Domain Name')),
                ('environment', models.CharField(choices=[('DEVELOPMENT', 'Development'), ('TESTING', 'Testing'), ('PRODUCTION', 'Production')], max_length=12, verbose_name='Environment')),
                ('canonical', models.BooleanField(db_index=True, default=False)),
                ('create_user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='domain_create_user', to=settings.AUTH_USER_MODEL)),
                ('delete_user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='domain_delete_user', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name_plural': 'domains',
                'get_latest_by': 'create_date',
                'ordering': ('domain',),
                'verbose_name': 'domain',
            },
            managers=[
                ('objects', slcsd_cms.models.domain.DomainManager()),
            ],
        ),
        migrations.CreateModel(
            name='Site',
            fields=[
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
                ('published', models.BooleanField(db_index=True, default=True)),
                ('create_date', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('update_date', models.DateTimeField(auto_now=True, db_index=True)),
                ('delete_date', models.DateTimeField(blank=True, db_index=True, null=True)),
                ('title', models.CharField(max_length=200, verbose_name='Site Title')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Description')),
                ('management', models.BooleanField(db_index=True, default=False)),
                ('create_user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='site_create_user', to=settings.AUTH_USER_MODEL)),
                ('delete_user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='site_delete_user', to=settings.AUTH_USER_MODEL)),
                ('update_user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='site_update_user', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name_plural': 'sites',
                'get_latest_by': 'create_date',
                'ordering': ('title',),
                'verbose_name': 'site',
            },
            managers=[
                ('objects', slcsd_cms.models.site.SiteManager()),
            ],
        ),
        migrations.AddField(
            model_name='domain',
            name='site',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='domains', to='slcsd_cms.Site'),
        ),
        migrations.AddField(
            model_name='domain',
            name='update_user',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='domain_update_user', to=settings.AUTH_USER_MODEL),
        ),
    ]
